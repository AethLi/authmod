# Configuration file

<<<<<<< HEAD
##########################################################################################################
# database
#--------------------------------------------------------------------------------------------------------#
#  ______            __     __                                __
# /\  _  \          /\ \__ /\ \                              /\ \
# \ \ \L\ \   __  __\ \ ,_\\ \ \___      ___ ___      ___    \_\ \
#  \ \  __ \ /\ \/\ \\ \ \/ \ \  _ `\  /' __` __`\   / __`\  /'_` \
#   \ \ \/\ \\ \ \_\ \\ \ \_ \ \ \ \ \ /\ \/\ \/\ \ /\ \L\ \/\ \L\ \
#    \ \_\ \_\\ \____/ \ \__\ \ \_\ \_\\ \_\ \_\ \_\\ \____/\ \___,_\
#     \/_/\/_/ \/___/   \/__/  \/_/\/_/ \/_/\/_/\/_/ \/___/  \/__,_ /
#                                                        version 2.7
#  Github link
#   - https://github.com/Chocorean/authmod
#  Authors
#    - Chocorean
#    - Mcdostone
##########################################################################################################

database {
    # column label telling whether the player is banned or not
    S:columnBanned=banned

    # column label containing the email adress
    S:columnIdentifier=email

    # column label containing the encrypted password
    S:columnPassword=password

    # column label containing the player's username
    S:columnUsername=username

    # column label containing the player's UUID
    S:columnUuid=uuid

    # Name of database you are using.
    S:database=minecraft

    # Dialect you want to be used by Authmod.
    S:dialect=mariadb

    # Name of the device hosting the database.
    S:host=mariadb

    # Database user's password.
    S:password=root

    # Port to be used.
    S:port=3306

    # Name of the table to use.
    S:table=players

    # Database user.
    S:user=root
}


=======
>>>>>>> master
general {
    # The way you want to store player's data, choose between 'database' or 'file'.
    # If the strategy is unknown, the server will be open for everyone.
    # Valid values:
    # FILE
    # DATABASE
    S:dataSourceStrategy=FILE

    # If the player doesn't log in after this delay (the unit is the second), he will be kicked from the server.
    I:delay=60

    # Email will be asked to the player for registration and authentication
    B:emailRequired=false

    # Enable or disable the /login command (if disabled, the server will be opened to everyone)
    B:enableAuthentication=true

    # Enable or disable the /register command
    B:enableRegistration=true

    database {
        # Column name telling whether the player is banned or not
        S:bannedField=banned

        # Name of the database
        S:database=minecraft

        # SQL dialect used
        S:dialect=mariadb

        # Column name for the email address
        S:emailField=email

        # Host hosting the database
        S:host=mariadb

        # Database user's password
        S:password=root

        # Column name containing the encrypted password
        S:passwordField=password

        # Port to be used
        I:port=3306

        # SQL table to be used
        S:table=players

        # Database user
        S:user=root

        # Column name for the username
        S:usernameField=username

        # Column name for the player's uuid
        S:uuidField=uuid
    }

    i18n {
        S:delay=Wake up, you have only %s seconds to log in.

        # Message displayed when an error with database occurs. Check your server logs.
        S:error=Something was wrong. Please contact the admins.
        S:loggedNo=No

        # Usage for /logged
        S:loggedUsage=/logged - tells you whether you are authenticated or not
        S:loggedYes=Yes

        # Message displayed when a player tries to connect while being banned.
        S:loginBanned=You've been banned. Please contact the admins.

        # Message displayed to a player when he/she attempts to sign in with an incorrect email.
        S:loginInvalidEmail=Your email is not valid.

        # Message displayed to a player when he/she successfully signs in.
        S:loginSuccess=Have fun!

        # Message displayed when a player tries to connect without having registered.
        S:loginUnknown=%s is not registered on this server.

        # Usage for /login
        S:loginUsage=/login <email> <password> - Allows you to authenticate on the server

        # Message displayed to a player when he/she typed a wrong password.
        S:loginWrongPassword=Wrong password. Please try again.

        # Message displayed to a player when he/she attempts to sign in with wrong username
        S:loginWrongUsername=Your username does not correspond to your credentials.

        # Message displayed to a player when he/she typed a wrong password.
        S:loginWrongUuid=Wrong UUID. Please be sure you use the same UUID when you registered your account.

        # Message displayed when a player tries to sign up with an already-registered account.
        S:registerExist=Someone has already registered with this username or email.

        # Message displayed to a player when he/she successfully registered.
        S:registerSuccess=You are registered and authenticated, have fun!

        # Usage for /register
        S:registerUsage=/register <email> <password> - Be careful when choosing it, you'll be asked to login each time you play.

        # Message displayed to a player when he/she successfully registered.
        S:registerWrongPasswordConfirmation=The password confirmation doesn't match. Please retry.

        # Message displayed to a player when he/she joins the server.
        S:welcome=Use /register to sign up or /login to sign in.
    }

}


